name: Python Package using Conda

on: [push, pull_request]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5
      matrix:
        python-version: [3.8, 3.9, 3.10, 3.11, 3.12]

    steps:
    - uses: actions/checkout@v4
    
    - name: Install Miniconda
      run: |
        wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
        bash miniconda.sh -b -p $HOME/miniconda
        echo "$HOME/miniconda/bin" >> $GITHUB_PATH
        source $HOME/miniconda/bin/activate
        conda init bash
        source ~/.bashrc

    - name: Create and activate environment for Python ${{ matrix.python-version }}
      run: |
        conda create --name env_${{ matrix.python-version }} python=${{ matrix.python-version }} --yes
        conda activate env_${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        if [ -f environment.yml ]; then
          conda env update --file environment.yml --name env_${{ matrix.python-version }}
        else
          echo "environment.yml not found!"
          exit 1
        fi

    - name: Lint with flake8
      run: |
        conda install flake8 --yes
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Run unit tests
      run: |
        conda install pytest --yes
        pytest --junitxml=results.xml

    - name: Upload test results
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: results.xml

    - name: Build and publish package
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        conda install conda-build anaconda-client --yes
        conda build .
        anaconda upload --user <username> /path/to/package
